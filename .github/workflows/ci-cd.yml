name: CI/CD Pipeline

on:
  push:
    tags: ["*"]
    branches:
      - main
      - "development"
  pull_request:
    branches: ["**"]
    types: [opened, synchronize, reopened]

env:
  IMAGE_NAME: ${{ github.repository }}
  SHA: ${{ github.event.pull_request.head.sha || github.event.after }}
  COMPARE_TAG: latest

jobs:
  write-creds-from-secrets:
    name: "Write env from secrets"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Write .env.development from secrets
        id: dev_creds
        run: |
          echo "${{ secrets.ENV_DEV }}" > .env
        env:
          ENV_DEV: ${{ secrets.ENV_DEV }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: creds-artifact
          path: |
            .env
          include-hidden-files: true

  build:
    runs-on: ubuntu-latest
    needs: write-creds-from-secrets
    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ env.SHA }}

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: creds-artifact
          path: ./

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependencies
        run: npm install

      - name: Build the application
        run: npm run build

      - name: Run tests
        run: npm test

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    permissions:
      deployments: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to production
        if: ${{ github.ref_name == 'development' }} && ${{ github.event.pull_request == 'merged' || github.event_name == 'push' }}
        uses: JorgeLNJunior/render-deploy@v1.4.4
        with:
          service_id: ${{ secrets.RENDER_SERVICE_ID }}
          api_key: ${{ secrets.RENDER_API_KEY }}
          clear_cache: true
          github_deployment: true
          deployment_environment: "development"
          github_token: ${{ secrets.GITHUB_TOKEN }}
